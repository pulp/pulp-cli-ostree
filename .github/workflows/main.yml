name: CI

on:
  pull_request:

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'
  CONTAINER_RUNTIME: 'docker'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install python dependencies
        run: |
          pip install pygithub
          pip install -r test_requirements.txt
      - name: Check commit message
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          for sha in $(curl -H "Authorization: token $GITHUB_TOKEN" $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .ci/scripts/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash
      - name: Lint code
        run: make lint
  test:
    runs-on: ubuntu-latest
    needs:
      - lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: "3.9"
            image_tag: "nightly"
            from_tag: "latest"
            container_file: "Containerfile.source"
          - python: "3.6"
            pulp_cli: "0.12.0"
            image_tag: "latest"
            from_tag: "latest"
            container_file: "Containerfile"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Test Dependencies
        run: pip install -r test_requirements.txt
      - name: Install pulp-cli from source
        run: pip install git+https://github.com/pulp/pulp-cli@main
        if: ${{ ! matrix.pulp_cli }}
      - name: Install specific pulp-cli version
        run: pip install pulp_cli==${{ matrix.pulp_cli }}
        if: ${{ matrix.pulp_cli }}
      - name: Run tests
        env:
          IMAGE_TAG: ${{ matrix.image_tag }}
          FROM_TAG: ${{ matrix.from_tag }}
          CONTAINER_FILE: ${{ matrix.container_file }}
        run: .ci/run_container.sh make test
